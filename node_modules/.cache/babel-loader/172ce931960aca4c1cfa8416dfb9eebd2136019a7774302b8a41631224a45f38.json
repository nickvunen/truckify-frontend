{"ast":null,"code":"var _jsxFileName = \"/Users/nickvanunen/Melcher/Truckify/truckify-frontend/src/pages/StringPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StringPage = () => {\n  _s();\n  const [result, setResult] = useState(\"Loading...\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Update URL if BE runs elsewhere (e.g., http://localhost:8000/string)\n    fetch(\"http://localhost:8000/string\").then(res => {\n      if (!res.ok) throw new Error(\"Failed to fetch\");\n      return res.json();\n    }).then(data => setResult(data.result)).catch(err => setError(err.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"String from Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(StringPage, \"+blbvzTJqCN/lNaa7gYDEoQ0PoE=\");\n_c = StringPage;\nexport default StringPage;\nvar _c;\n$RefreshReg$(_c, \"StringPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StringPage","_s","result","setResult","error","setError","fetch","then","res","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/nickvanunen/Melcher/Truckify/truckify-frontend/src/pages/StringPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst StringPage: React.FC = () => {\n  const [result, setResult] = useState<string>(\"Loading...\");\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Update URL if BE runs elsewhere (e.g., http://localhost:8000/string)\n    fetch(\"http://localhost:8000/string\")\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to fetch\");\n        return res.json();\n      })\n      .then((data) => setResult(data.result))\n      .catch((err) => setError(err.message));\n  }, []);\n\n  return (\n    <div>\n      <h2>String from Backend</h2>\n      {error ? <p style={{ color: \"red\" }}>{error}</p> : <p>{result}</p>}\n    </div>\n  );\n};\n\nexport default StringPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAS,YAAY,CAAC;EAC1D,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MAC/C,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKT,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC,CAAC,CACtCW,KAAK,CAAEC,GAAG,IAAKT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BhB,KAAK,gBAAGL,OAAA;MAAGsB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGrB,OAAA;MAAAiB,QAAA,EAAId;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACnB,EAAA,CArBID,UAAoB;AAAAuB,EAAA,GAApBvB,UAAoB;AAuB1B,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}